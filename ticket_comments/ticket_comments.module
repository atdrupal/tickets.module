<?php

require_once dirname(__FILE__) . '/controller/TicketCommentEntityMetaController.php';
require_once dirname(__FILE__) . '/controller/TicketComment.php';
require_once dirname(__FILE__) . '/controller/TicketCommentUIController.php';

/**
 * Implements hook_entity_info().
 */
function ticket_comments_entity_info() {
  
  $info['ticket_comments'] = array(
    'label' => 'Ticket comment',
    'module' => 'tickets',
    'base table' => 'ticket_comments',
    'fieldable' => TRUE,
    'uri callback' => 'entity_class_uri',
    'access callback' => 'ticket_comments_access_callback',
    'label callback' => 'ticket_comments_label_callback',
    'controller class' => 'EntityAPIController', // 'Lgentity_Entity_MachineController',
    'entity class' => 'TicketCommentEntity',
    'metadata controller class' => 'EntityDefaultMetadataController',
    'entity keys' => array('id' => 'ticket_cid', 'bundle' => 'type'),
    'bundle keys' => array('bundle' => 'type'),
    'bundles' => array(
      'ticket_comments' => array(
        'label' => 'Ticket Comments',
        'admin' => array(
          'path' => 'admin/structure/ticket-comments',
          'access arguments' => array('administer ticket comments'),
        ),
      ),
    ),
    'admin ui' => array(
      'path' => 'admin/structure/ticket-comments',
      'file' => 'includes/tickets_category.admin.inc',
      'controller class' => 'TicketCommentEntityUIController',
    ),
  );
  
  return $info;
}



/**
 * Access callback for machine entity.
 */
function ticket_comments_access_callback($op, $entity, $account, $entity_type) {
  return user_access('administer ticket comment');
}

/**
 * Label callback for machine entity.
 */
function ticket_comments_label_callback($entity, $entity_type) {
  return ucwords($entity->name);
}
/**
 * Implements hook_ticket_view()
 */
function ticket_comments_ticket_view($ticket, $view_mode, $langcode) {
  if ($view_mode == 'full') {
      $ticket->content['comments'] = ticket_comments_page_additions($ticket);
  }
}


/**
 * Build the comment-related elements for ticket detail pages.
 *
 * @param $ticket
 *  A ticket object.
 */
function ticket_comments_page_additions($ticket) {
  $additions = array('add_date' => 'This is data demo');
//  kpr('callback');exit;

//  // Only attempt to render comments if the ticket has visible comments.
//  // Unpublished comments are not included in $ticket->comment_count, so show
//  // comments unconditionally if the user is an administrator.
//  if (($ticket->comment_count && user_access('access comments')) || user_access('administer comments')) {
//    $mode = variable_get('comment_default_mode_' . $ticket->type, COMMENT_MODE_THREADED);
//    $comments_per_page = variable_get('comment_default_per_page_' . $ticket->type, 50);
//    if ($cids = comment_get_thread($ticket, $mode, $comments_per_page)) {
//      $comments = comment_load_multiple($cids);
//      comment_prepare_thread($comments);
//      $build = comment_view_multiple($comments, $ticket);
//      $build['pager']['#theme'] = 'pager';
//      $additions['comments'] = $build;
//    }
//  }
//
//  // Append comment form if needed.
//  if (user_access('post comments') && $ticket->comment == COMMENT_NODE_OPEN && (variable_get('comment_form_location_' . $ticket->type, COMMENT_FORM_BELOW) == COMMENT_FORM_BELOW)) {
//    $build = drupal_get_form("comment_ticket_{$ticket->type}_form", (object) array('nid' => $ticket->nid));
//    $additions['comment_form'] = $build;
//  }
//
//  if ($additions) {
//    $additions += array(
//      '#theme' => 'comment_wrapper__ticket_' . $ticket->type,
//      '#ticket' => $ticket,
//      'comments' => array(),
//      'comment_form' => array(),
//    );
//  }

  return $additions;
}

