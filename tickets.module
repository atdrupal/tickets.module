<?php


require_once dirname(__FILE__) . '/lib/Ticket.php';
require_once dirname(__FILE__) . '/lib/TicketUIController.php';
require_once dirname(__FILE__) . '/includes/tickets.fields.inc';
require_once dirname(__FILE__) . '/lib/TicketCategory.php';
require_once dirname(__FILE__) . '/lib/TicketCategoryUIController.php';
require_once dirname(__FILE__) . '/lib/TicketCategoryInlineEntityForm.php';
require_once dirname(__FILE__) . '/includes/tickets.inc';

/**
 * Implements hook_entity_info().
 */
function tickets_entity_info() {
  $info['ticket'] = array(
    'label' => 'Ticket',
    'module' => 'tickets',
    'base table' => 'ticket',
    'fieldable' => TRUE,
    'uri callback' => 'entity_class_uri',
    'access callback' => 'ticket_access_callback',
    'label callback' => 'ticket_label_callback',
    'controller class' => 'EntityAPIController', // 'Lgentity_Entity_MachineController',
    'entity class' => 'TicketEntity',
    'metadata controller class' => 'EntityDefaultMetadataController',
    'entity keys' => array('id' => 'ticket_id', 'bundle' => 'type'),
    'bundle keys' => array('bundle' => 'type'),
    'bundles' => array(
      'ticket' => array(
        'label' => 'Ticket',
        'admin' => array(
          'path' => 'admin/structure/tickets',
          'access arguments' => array('administer tickets'),
        ),
      ),
    ),
    'admin ui' => array(
      'path' => 'admin/structure/tickets',
      'file' => 'includes/tickets.admin.inc',
      'controller class' => 'EntityTicketUIController',
    ),
    'view modes' => array(
      'full' => array(
        'label' => t('Full content'),
        'custom settings' => FALSE,
      ),
      'teaser' => array(
        'label' => t('Teaser'),
        'custom settings' => FALSE,
      ),
    ),
  );
  $info['ticket_category'] = array(
    'label' => 'Ticket category',
    'module' => 'tickets',
    'base table' => 'ticket_category',
    'fieldable' => TRUE,
    'access callback' => 'ticket_category_access_callback',
    'label callback' => 'ticket_category_label_callback',
    'controller class' => 'EntityAPIController', // 'Lgentity_Entity_MachineController',
    'entity class' => 'TicketCategoryEntity',
    'metadata controller class' => 'EntityDefaultMetadataController',
    'entity keys' => array('id' => 'ticket_cid', 'bundle' => 'type'),
    'bundle keys' => array('bundle' => 'type'),
    'bundles' => array(
      'ticket_category' => array(
        'label' => 'Ticket Category',
        'admin' => array(
          'path' => 'admin/structure/ticket-categorys',
          'access arguments' => array('administer ticket category'),
        ),
      ),
    ),
    'admin ui' => array(
      'path' => 'admin/structure/ticket-categorys',
      'file' => 'includes/tickets_category.admin.inc',
      'controller class' => 'TicketCategoryEntityUIController',
    ),
  );
  
  return $info;
}


/**
 * Access callback for machine entity.
 */
function ticket_access_callback($op, $entity, $account, $entity_type) {
  return user_access('administer tickets');
}

/**
 * Label callback for machine entity.
 */
function ticket_label_callback($entity, $entity_type) {
  return ucwords($entity->type) . " #{$entity->ticket_id}";
}


/**
 * Access callback for machine entity.
 */
function ticket_category_access_callback($op, $entity, $account, $entity_type) {
  return user_access('administer ticket category');
}

/**
 * Label callback for machine entity.
 */
function ticket_category_label_callback($entity, $entity_type) {
  return ucwords($entity->type) . " #{$entity->ticket_id}";
}

/**
 * Implements hook_permission
 */
function tickets_permission() {
  return array(
    'administer tickets' => array(
      'title' => t('Administer tickets'), 
      'description' => t('Perform administration tasks for tickets.'),
    ),
  );
}


/**
 * Implements hook_fied_extra_fields().
 */
function tickets_field_extra_fields() {
  $extra = array();
  $entity_info = entity_get_info();
  if (empty($entity_info)) return;
  
  if (isset($entity_info['ticket'])) {
    foreach ($entity_info['ticket']['bundles'] as $bundle => $info) {
      $extra['ticket'][$bundle] = array(
        'form' => array(
          'title' => array(
            'label' => t('Title'),
            'description' => t('The displayed title of the entity.'),
            'weight' => -5,
          ),
        ),
        'display' => array(
          'title' => array(
            'label' => t('Title'),
            'description' => t('The displayed title of the entity.'),
            'weight' => -5,
          ),
        ),
      );
      if ($bundle == 'ticket') {
        tickets_add_body_field('ticket');
        tickets_add_file_field('ticket');
      }
    }
  }
  if (isset($entity_info['ticket_category'])) {
    foreach ($entity_info['ticket_category']['bundles'] as $bundle => $info) {
      $extra['ticket_category'][$bundle] = array(
        'form' => array(
          'name' => array(
            'label' => t('Name'),
            'description' => t('The displayed name of the entity.'),
            'weight' => -5,
          ),
        ),
        'display' => array(
          'title' => array(
            'label' => t('Name'),
            'description' => t('The displayed title of the entity.'),
            'weight' => -5,
          ),
        ),
      );
      if ($bundle == 'ticket_category') {
        tickets_category_add_term_reference('ticket_category');
      }
    }
  }
  return $extra;
}



/**
 * Sets up content to show an individual model
 * @todo - get rid of drupal_set_title();
 */
function tickets_page_view($ticket, $view_mode = 'full') {   
//  $ticket = ticket_load($ticket);
//  kpr($ticket);exit;
  $controller = entity_get_controller('ticket');  
  $content = $controller->view(array($ticket->ticket_id => $ticket));
  drupal_set_title($ticket->title);
  return $content;
}


/**
 * Menu title callback for showing individual entities
 */
function tickets_page_title(TicketEntity $ticket){
  return $ticket->name;
}


/**
 * Implements hook_entity_info_alter().
 */
function tickets_entity_info_alter(&$entity_info) {
  if (isset($entity_info['ticket_category'])) {
    $entity_info['ticket_category']['inline entity form'] = array(
      'controller' => 'TicketCategoryInlineEntityFormController',
    );
  }
}


function tickets_form_alter($form, $form_state, $form_id) {
//  dsm($form_id);
}
